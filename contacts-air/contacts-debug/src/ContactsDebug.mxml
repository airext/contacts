<?xml version="1.0"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark">

    <fx:Script>
        <![CDATA[
        import com.github.rozd.ane.Contacts;
        import com.github.rozd.ane.core.Response;
        import com.github.rozd.ane.core.contacts;
        import com.github.rozd.ane.data.Range;

        use namespace contacts;

        [Bindable]
        private var bmd:BitmapData;

        private function isModified_clickHandler(event:MouseEvent):void
        {
            var result:Boolean = Contacts.getInstance().isModified(new Date(2012));

            trace(result);
        }

        private function getContacts_clickHandler(event:MouseEvent):void
        {
            var t:Number = getTimer();

            var result:Array = Contacts.getInstance().getContacts(new com.github.rozd.ane.data.Range(0, 10));

            trace("elapsed:", getTimer() - t);
            Date().setMilliseconds()
            bmd = result[0].thumbnail;

            trace(result[0].emails.length > 0 ? result[0].emails[0] : "");

            trace(result ? result.length : 0, result);
        }

        private function getContactCount_clickHandler(event:MouseEvent):void
        {
            var result:uint = Contacts.getInstance().getContactCount();

            trace(result);
        }

        private function isModifiedAsync_clickHandler(event:MouseEvent):void
        {
            Contacts.getInstance().isModifiedAsync(new Date(2012),
            new Response(
                function(data:Object):void
                {
                    trace(data);
                },
                function (info:Object):void
                {
                    trace(info)
                })
            );
        }

        private function getContactsAsync_clickHandler(event:MouseEvent):void
        {
            Contacts.getInstance().getContactsAsync(new com.github.rozd.ane.data.Range(0, 10), null,
                new Response(
                    function(data:Object):void
                    {
                       trace("0-10", traceContacts(data));
                    },
                    function (info:Object):void
                    {
                       trace(info)
                    })
            );

            Contacts.getInstance().getContactsAsync(new com.github.rozd.ane.data.Range(10, 10), null,
                new Response(
                    function(data:Object):void
                    {
                       trace("10-10", traceContacts(data));
                    },
                    function (info:Object):void
                    {
                       trace(info)
                    })
            );

            Contacts.getInstance().getContactsAsync(new com.github.rozd.ane.data.Range(20, 10), null,
                new Response(
                    function(data:Object):void
                    {
                       trace("20-10", traceContacts(data));
                    },
                    function (info:Object):void
                    {
                       trace(info)
                    })
            );
        }

        private function traceContacts(contacts:Object):String
        {
            var str:String = "";

            for each (var contact in contacts)
            {
                str += contact.compositeName + ", ";
            }

            return str;
        }

        private function getContactCountAsync_clickHandler(event:MouseEvent):void
        {
            Contacts.getInstance().getContactCountAsync(
                new Response(
                    function(data:Object):void
                    {
                        trace(data);
                    },
                    function (info:Object):void
                    {
                        trace(info)
                    })
            );
        }

        private function pickIsModifiedResult_clickHandler(event:MouseEvent):void
        {
            trace(Contacts.getInstance().pickIsModifiedResult(0));
        }

        private function pickGetContactsResult_clickHandler(event:MouseEvent):void
        {
            trace(Contacts.getInstance().pickGetContactsResult(0));
        }

        private function pickContactCountResult_clickHandler(event:MouseEvent):void
        {
            trace(Contacts.getInstance().pickGetContactCountResult(0));
        }

        ]]>
    </fx:Script>

    <s:layout>
        <s:VerticalLayout paddingTop="20" paddingBottom="20" horizontalAlign="center" />
    </s:layout>

    <s:Image source="{bmd}" />

    <s:Button label="isModified" click=" isModified_clickHandler(event)" />

    <s:Button label="getContacts" click="getContacts_clickHandler(event)" />

    <s:Button label="getContactCount" click="getContactCount_clickHandler(event)" />

    <s:Button label="isModifiedAsync" click="isModifiedAsync_clickHandler(event)" />
    <s:Button label="pickIsModifiedResult" click="pickIsModifiedResult_clickHandler(event)" />

    <s:Button label="getContactsAsync" click="getContactsAsync_clickHandler(event)" />
    <s:Button label="pickGetContactsResult" click="pickGetContactsResult_clickHandler(event)" />

    <s:Button label="getContactCountAsync" click="getContactCountAsync_clickHandler(event)" />
    <s:Button label="pickContactCountResult" click="pickContactCountResult_clickHandler(event)" />

</s:Application>
